@using PagedList;
@using PagedList.Mvc;
@model IPagedList<MvcTest.Models.Gen_Mst_Module>

@{
    ViewBag.Title = "Module";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <title>Module</title>
    <meta http-equiv="Content-Type" content="text/xhtml; charset=UTF-8" />
</head>
<body>
    <p>
        @Html.ActionLink("Create New record", "Create")
    </p>
    <p>
        @using (Html.BeginForm())
        {
            <label for="SearchString">ModuleName</label>
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <button type="submit" name="ModuleName" class="btn btn-info">
                <span class="glyphicon glyphicon-search"></span> Search
            </button>

        }
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ProductCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ModuleCode)
            </th>
            <th>
                @Html.ActionLink("ModuleName", "Index", new { sortBy = ViewBag.sortModuleNameParameter, CurrentFilter = ViewBag.CurrentFilter, SearchString = Request.QueryString["SearchString"] })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Comments)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ModuleOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().CreatedBy)
            </th>
            <th>
                @Html.ActionLink("CreatedDate", "Index", new { sortBy = ViewBag.sortCreatedDateParameter, currentFilter = ViewBag.CurrentFilter, SearchString = Request.QueryString["SearchString"] })

            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Gen_Mst_Product.ProductName)
            </th>
            <th>Action</th>
        </tr>
        @if (Model.Count() == 0)
        {
            <tr class="text-danger">
                <td colspan="6"><b>No Rows Match Search Criteria</b></td>
            </tr>
        }
        else
        {

            foreach (var item in Model)
            {
                <tr class="text-success">
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModuleCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModuleName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Comments)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModuleOrder)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedBy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gen_Mst_Product.ProductName)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ModuleCode }) |
                            @Html.ActionLink("Details", "Details", new { id = item.ModuleCode }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ModuleCode })
                        @*<center>
                            <a href="@Url.Action("Details","Module",new {id = item.ModuleCode })">
                                <img src="@Url.Content("~/Images/info.png")" alt="Details" />
                            </a> <br />
                            <a href="@Url.Action("Edit","Module",new { id = item.ModuleCode})">
                                <img src="@Url.Content("~/Images/pen.png")" alt="Edit" />
                            </a> <br />
                            <a href="@Url.Action("Delete","Module",new {id = item.ModuleCode })">
                                <img src="@Url.Content("~/Images/bin.png")" alt="Delete" />
                            </a>
                        </center>*@
                    </td>
                </tr>
            }
        }

    </table>
    @Html.PagedListPager(Model, Page => Url.Action("Index", new { Page, SearchString = Request.QueryString["SearchString"], currentFIlter = Request.QueryString["currentFilter"], sortBy = Request["sortBy"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
</body>
</html>